%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, November 29, 2012 9:13:40 AM MST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
3.00000 w
8.38599 6.25837 381.608 376.224 rc
newpath
369.062 27.7367 m
369.062 10.2583 l
366.946 14.0425 l
371.179 14.0425 l
369.062 10.2583 l
S
newpath
370.944 66.8196 m
367.181 49.3412 l
365.879 53.6109 l
370.112 52.6398 l
367.181 49.3412 l
S
newpath
329.321 25.7947 m
333.083 12.2004 l
330.622 14.6581 l
333.915 15.6291 l
333.083 12.2004 l
S
newpath
331.202 64.8775 m
331.202 51.2832 l
329.556 54.2265 l
332.848 54.2265 l
331.202 51.2832 l
S
newpath
374.706 144.985 m
363.419 127.507 l
363.746 132.747 l
367.979 129.834 l
363.419 127.507 l
S
newpath
376.588 184.068 m
361.537 166.589 l
362.679 172.316 l
366.912 168.432 l
361.537 166.589 l
S
newpath
334.965 143.043 m
327.439 129.449 l
327.422 133.363 l
330.715 131.421 l
327.439 129.449 l
S
newpath
336.846 182.126 m
325.558 168.531 l
326.356 172.931 l
329.648 170.018 l
325.558 168.531 l
S
newpath
249.837 21.9106 m
261.125 16.0845 l
257.975 15.8893 l
259.386 18.8024 l
261.125 16.0845 l
S
newpath
251.718 60.9935 m
259.243 55.1673 l
256.909 55.4577 l
258.320 57.3997 l
259.243 55.1673 l
S
newpath
210.095 19.9686 m
225.145 18.0265 l
221.652 16.5049 l
222.122 20.3890 l
225.145 18.0265 l
S
newpath
211.976 59.0514 m
223.264 57.1094 l
220.585 56.0733 l
221.055 58.9863 l
223.264 57.1094 l
S
newpath
255.481 139.159 m
255.481 133.333 l
254.775 134.594 l
256.186 134.594 l
255.481 133.333 l
S
newpath
257.362 178.242 m
253.599 172.416 l
253.709 174.162 l
255.120 173.191 l
253.599 172.416 l
S
newpath
215.739 137.217 m
219.502 135.275 l
218.452 135.210 l
218.922 136.181 l
219.502 135.275 l
S
newpath
217.620 176.300 m
217.620 174.358 l
217.385 174.778 l
217.855 174.778 l
217.620 174.358 l
S
newpath
213.858 98.1343 m
221.383 96.1922 l
219.518 95.6417 l
219.989 97.5837 l
221.383 96.1922 l
S
newpath
253.599 100.076 m
257.362 94.2502 l
255.842 95.0260 l
257.253 95.9971 l
257.362 94.2502 l
S
newpath
297.104 180.184 m
289.579 170.473 l
290.032 173.547 l
292.384 171.605 l
289.579 170.473 l
S
newpath
295.223 141.101 m
291.460 131.391 l
291.099 133.978 l
293.450 133.007 l
291.460 131.391 l
S
newpath
293.341 102.018 m
293.341 92.3082 l
292.166 94.4105 l
294.517 94.4105 l
293.341 92.3082 l
S
newpath
291.460 62.9355 m
295.223 53.2253 l
293.232 54.8421 l
295.584 55.8131 l
295.223 53.2253 l
S
newpath
289.579 23.8526 m
297.104 14.1424 l
294.299 15.2737 l
296.650 17.2157 l
297.104 14.1424 l
S
newpath
333.083 103.960 m
329.321 90.3661 l
328.489 93.7948 l
331.781 92.8238 l
329.321 90.3661 l
S
newpath
372.825 105.902 m
365.300 88.4241 l
364.813 93.1792 l
369.046 91.2372 l
365.300 88.4241 l
S
newpath
378.469 223.151 m
359.656 205.672 l
361.613 211.884 l
365.846 207.029 l
359.656 205.672 l
S
newpath
380.350 262.234 m
357.775 244.755 l
360.546 251.452 l
364.779 245.626 l
357.775 244.755 l
S
newpath
338.727 221.209 m
323.677 207.614 l
325.289 212.500 l
328.581 208.616 l
323.677 207.614 l
S
newpath
340.608 260.291 m
321.795 246.697 l
324.222 252.068 l
327.515 247.213 l
321.795 246.697 l
S
newpath
385.994 379.482 m
352.131 362.004 l
357.346 370.158 l
361.579 361.418 l
352.131 362.004 l
S
newpath
346.252 377.540 m
316.151 363.946 l
321.022 370.773 l
324.315 363.005 l
316.151 363.946 l
S
newpath
344.371 338.457 m
318.033 324.863 l
322.089 331.205 l
325.381 324.408 l
318.033 324.863 l
S
newpath
384.113 340.399 m
354.012 322.921 l
358.413 330.589 l
362.646 322.821 l
354.012 322.921 l
S
newpath
259.243 217.325 m
251.718 211.498 l
252.642 213.731 l
254.053 211.789 l
251.718 211.498 l
S
newpath
261.125 256.407 m
249.837 250.581 l
251.575 253.299 l
252.986 250.386 l
249.837 250.581 l
S
newpath
219.502 215.382 m
215.739 213.440 l
216.318 214.346 l
216.789 213.375 l
215.739 213.440 l
S
newpath
221.383 254.465 m
213.858 252.523 l
215.252 253.915 l
215.722 251.973 l
213.858 252.523 l
S
newpath
264.887 334.573 m
246.074 328.747 l
249.442 332.436 l
250.853 327.581 l
246.074 328.747 l
S
newpath
266.769 373.656 m
244.193 367.830 l
248.375 372.004 l
249.786 366.178 l
244.193 367.830 l
S
newpath
225.145 332.631 m
210.095 330.689 l
213.118 333.052 l
213.589 329.167 l
210.095 330.689 l
S
newpath
227.027 371.714 m
208.214 369.772 l
212.052 372.620 l
212.522 367.765 l
208.214 369.772 l
S
newpath
223.264 293.548 m
211.976 291.606 l
214.185 293.483 l
214.655 290.570 l
211.976 291.606 l
S
newpath
263.006 295.490 m
247.956 289.664 l
250.509 292.868 l
251.920 288.983 l
247.956 289.664 l
S
newpath
306.510 375.598 m
280.172 365.888 l
284.699 371.389 l
287.050 364.592 l
280.172 365.888 l
S
newpath
304.629 336.515 m
282.053 326.805 l
285.765 331.820 l
288.117 325.994 l
282.053 326.805 l
S
newpath
302.748 297.432 m
283.935 287.722 l
286.832 292.252 l
289.184 287.397 l
283.935 287.722 l
S
newpath
300.867 258.349 m
285.816 248.639 l
287.899 252.684 l
290.250 248.799 l
285.816 248.639 l
S
newpath
298.985 219.267 m
287.697 209.556 l
288.965 213.115 l
291.317 210.202 l
287.697 209.556 l
S
newpath
342.490 299.374 m
319.914 285.780 l
323.156 291.636 l
326.448 285.810 l
319.914 285.780 l
S
newpath
382.232 301.316 m
355.893 283.838 l
359.479 291.021 l
363.712 284.224 l
355.893 283.838 l
S
newpath
170.353 18.0265 m
189.166 19.9686 l
185.328 17.1205 l
184.858 21.9756 l
189.166 19.9686 l
S
newpath
172.234 57.1094 m
187.285 59.0514 l
184.261 56.6889 l
183.791 60.5730 l
187.285 59.0514 l
S
newpath
132.493 55.1673 m
151.306 60.9935 l
147.938 57.3045 l
146.527 62.1596 l
151.306 60.9935 l
S
newpath
130.611 16.0845 m
153.187 21.9106 l
149.005 17.7361 l
147.594 23.5622 l
153.187 21.9106 l
S
newpath
175.997 135.275 m
183.522 137.217 l
182.128 135.825 l
181.658 137.767 l
183.522 137.217 l
S
newpath
177.878 174.358 m
181.641 176.300 l
181.061 175.394 l
180.591 176.365 l
181.641 176.300 l
S
newpath
98.3949 170.473 m
109.682 180.184 l
108.414 176.625 l
106.063 179.538 l
109.682 180.184 l
S
newpath
138.136 172.416 m
145.662 178.242 l
144.738 176.009 l
143.327 177.951 l
145.662 178.242 l
S
newpath
136.255 133.333 m
147.543 139.159 l
145.805 136.441 l
144.394 139.354 l
147.543 139.159 l
S
newpath
51.1278 12.2004 m
81.2287 25.7947 l
76.3578 18.9673 l
73.0656 26.7355 l
81.2287 25.7947 l
S
newpath
53.0091 51.2832 m
79.3474 64.8775 l
75.2912 58.5357 l
71.9989 65.3328 l
79.3474 64.8775 l
S
newpath
11.3860 10.2583 m
45.2495 27.7367 l
40.0343 19.5829 l
35.8013 28.3221 l
45.2495 27.7367 l
S
newpath
13.2673 49.3412 m
43.3682 66.8196 l
38.9676 59.1513 l
34.7347 66.9195 l
43.3682 66.8196 l
S
newpath
56.7718 129.449 m
75.5848 143.043 l
73.1578 137.672 l
69.8655 142.527 l
75.5848 143.043 l
S
newpath
58.6531 168.531 m
73.7035 182.126 l
72.0911 177.240 l
68.7989 181.125 l
73.7035 182.126 l
S
newpath
17.0299 127.507 m
39.6056 144.985 l
36.8343 138.288 l
32.6013 144.114 l
39.6056 144.985 l
S
newpath
18.9112 166.589 m
37.7243 184.068 l
35.7676 177.856 l
31.5346 182.711 l
37.7243 184.068 l
S
newpath
15.1486 88.4241 m
41.4869 105.902 l
37.9009 98.7197 l
33.6680 105.516 l
41.4869 105.902 l
S
newpath
54.8905 90.3661 m
77.4661 103.960 l
74.2245 98.1041 l
70.9322 103.930 l
77.4661 103.960 l
S
newpath
96.5136 131.391 m
111.564 141.101 l
109.481 137.056 l
107.129 140.941 l
111.564 141.101 l
S
newpath
94.6323 92.3082 m
113.445 102.018 l
110.548 97.4885 l
108.196 102.343 l
113.445 102.018 l
S
newpath
92.7510 53.2253 m
115.326 62.9355 l
111.614 57.9201 l
109.263 63.7462 l
115.326 62.9355 l
S
newpath
90.8697 14.1424 m
117.208 23.8526 l
112.681 18.3517 l
110.329 25.1489 l
117.208 23.8526 l
S
newpath
134.374 94.2502 m
149.424 100.076 l
146.871 96.8729 l
145.460 100.757 l
149.424 100.076 l
S
newpath
174.116 96.1922 m
185.404 98.1343 l
183.195 96.2573 l
182.724 99.1703 l
185.404 98.1343 l
S
newpath
179.760 213.440 m
179.760 215.382 l
179.995 214.962 l
179.524 214.962 l
179.760 215.382 l
S
newpath
181.641 252.523 m
177.878 254.465 l
178.928 254.530 l
178.458 253.559 l
177.878 254.465 l
S
newpath
140.018 211.498 m
143.780 217.325 l
143.671 215.578 l
142.260 216.549 l
143.780 217.325 l
S
newpath
100.276 209.556 m
107.801 219.267 l
107.348 216.193 l
104.996 218.135 l
107.801 219.267 l
S
newpath
141.899 250.581 m
141.899 256.407 l
142.605 255.146 l
141.194 255.146 l
141.899 256.407 l
S
newpath
102.157 248.639 m
105.920 258.349 l
106.281 255.762 l
103.929 256.733 l
105.920 258.349 l
S
newpath
185.404 330.689 m
174.116 332.631 l
176.795 333.667 l
176.324 330.754 l
174.116 332.631 l
S
newpath
187.285 369.772 m
172.234 371.714 l
175.728 373.236 l
175.258 369.351 l
172.234 371.714 l
S
newpath
105.920 326.805 m
102.157 336.515 l
104.148 334.898 l
101.796 333.927 l
102.157 336.515 l
S
newpath
107.801 365.888 m
100.276 375.598 l
103.081 374.467 l
100.729 372.525 l
100.276 375.598 l
S
newpath
147.543 367.830 m
136.255 373.656 l
139.405 373.851 l
137.994 370.938 l
136.255 373.656 l
S
newpath
145.662 328.747 m
138.136 334.573 l
140.471 334.283 l
139.060 332.341 l
138.136 334.573 l
S
newpath
60.5344 207.614 m
71.8222 221.209 l
71.0245 216.809 l
67.7322 219.722 l
71.8222 221.209 l
S
newpath
62.4157 246.697 m
69.9409 260.291 l
69.9578 256.377 l
66.6655 258.319 l
69.9409 260.291 l
S
newpath
20.7925 205.672 m
35.8429 223.151 l
34.7009 217.424 l
30.4680 221.309 l
35.8429 223.151 l
S
newpath
22.6738 244.755 m
33.9616 262.234 l
33.6342 256.993 l
29.4013 259.906 l
33.9616 262.234 l
S
newpath
66.1783 324.863 m
66.1783 338.457 l
67.8244 335.514 l
64.5322 335.514 l
66.1783 338.457 l
S
newpath
68.0596 363.946 m
64.2970 377.540 l
66.7578 375.082 l
63.4655 374.111 l
64.2970 377.540 l
S
newpath
28.3177 362.004 m
28.3177 379.482 l
30.4342 375.698 l
26.2012 375.698 l
28.3177 379.482 l
S
newpath
26.4364 322.921 m
30.1990 340.399 l
31.5009 336.130 l
27.2679 337.101 l
30.1990 340.399 l
S
newpath
24.5551 283.838 m
32.0803 301.316 l
32.5675 296.561 l
28.3346 298.503 l
32.0803 301.316 l
S
newpath
64.2970 285.780 m
68.0596 299.374 l
68.8911 295.946 l
65.5988 296.917 l
68.0596 299.374 l
S
newpath
104.038 287.722 m
104.038 297.432 l
105.214 295.330 l
102.863 295.330 l
104.038 297.432 l
S
newpath
143.780 289.664 m
140.018 295.490 l
141.538 294.714 l
140.127 293.743 l
140.018 295.490 l
S
newpath
183.522 291.606 m
175.997 293.548 l
177.861 294.099 l
177.391 292.157 l
175.997 293.548 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
11.3860 194.870 m
385.994 194.870 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
286 240 13 37 rc
q
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
28.3177 194.870 m
28.3177 200.070 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 210 18 32 rc
q
newpath
33.7343 227.500 m
12.2656 227.500 l
12.2656 225.890 l
33.7343 225.890 l
33.7343 227.500 l
h
f
Q
Q
q
newpath
39.0937 215.046 m
39.0937 231.843 l
39.0937 233.104 39.1484 233.908 39.2578 234.257  c
39.3671 234.606 39.5989 234.890 39.9531 235.109  c
40.3072 235.328 40.8750 235.437 41.6562 235.437  c
42.1250 235.437 l
42.1250 236.000 l
31.3125 236.000 l
31.3125 235.437 l
31.8593 235.437 l
32.7343 235.437 33.3593 235.335 33.7343 235.132  c
34.1093 234.929 34.3619 234.653 34.4921 234.304  c
34.6224 233.955 34.6875 233.135 34.6875 231.843  c
34.6875 221.203 l
34.6875 220.244 34.6432 219.648 34.5546 219.414  c
34.4661 219.179 34.2968 218.979 34.0468 218.812  c
33.7968 218.645 33.5104 218.562 33.1875 218.562  c
32.6770 218.562 32.0520 218.724 31.3125 219.046  c
31.0468 218.500 l
38.5937 215.046 l
39.0937 215.046 l
h
58.8593 225.734 m
58.8593 227.786 58.5729 229.697 58.0000 231.468  c
57.6562 232.562 57.1953 233.458 56.6171 234.156  c
56.0390 234.854 55.3802 235.406 54.6406 235.812  c
53.9010 236.218 53.0989 236.421 52.2343 236.421  c
51.2447 236.421 50.3515 236.169 49.5546 235.664  c
48.7578 235.158 48.0520 234.437 47.4375 233.500  c
46.9895 232.812 46.5989 231.901 46.2656 230.765  c
45.8385 229.224 45.6250 227.630 45.6250 225.984  c
45.6250 223.755 45.9375 221.703 46.5625 219.828  c
47.0729 218.286 47.8541 217.104 48.9062 216.281  c
49.9583 215.458 51.0677 215.046 52.2343 215.046  c
53.4218 215.046 54.5338 215.453 55.5703 216.265  c
56.6067 217.078 57.3645 218.171 57.8437 219.546  c
58.5208 221.432 58.8593 223.494 58.8593 225.734  c
h
54.2031 225.703 m
54.2031 222.109 54.1822 220.015 54.1406 219.421  c
54.0364 218.026 53.7968 217.078 53.4218 216.578  c
53.1614 216.255 52.7500 216.093 52.1875 216.093  c
51.7500 216.093 51.4062 216.213 51.1562 216.453  c
50.7812 216.807 50.5286 217.432 50.3984 218.328  c
50.2682 219.224 50.2031 222.338 50.2031 227.671  c
50.2031 230.578 50.3072 232.526 50.5156 233.515  c
50.6614 234.234 50.8750 234.713 51.1562 234.953  c
51.4375 235.192 51.8125 235.312 52.2812 235.312  c
52.7812 235.312 53.1614 235.151 53.4218 234.828  c
53.8385 234.265 54.0781 233.395 54.1406 232.218  c
54.2031 225.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
198.690 194.870 m
198.690 200.070 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
199.359 223.734 m
199.359 225.786 199.072 227.697 198.500 229.468  c
198.156 230.562 197.695 231.458 197.117 232.156  c
196.539 232.854 195.880 233.406 195.140 233.812  c
194.401 234.218 193.599 234.421 192.734 234.421  c
191.744 234.421 190.851 234.169 190.054 233.664  c
189.257 233.158 188.552 232.437 187.937 231.500  c
187.489 230.812 187.099 229.901 186.765 228.765  c
186.338 227.224 186.125 225.630 186.125 223.984  c
186.125 221.755 186.437 219.703 187.062 217.828  c
187.572 216.286 188.354 215.104 189.406 214.281  c
190.458 213.458 191.567 213.046 192.734 213.046  c
193.921 213.046 195.033 213.453 196.070 214.265  c
197.106 215.078 197.864 216.171 198.343 217.546  c
199.020 219.432 199.359 221.494 199.359 223.734  c
h
194.703 223.703 m
194.703 220.109 194.682 218.015 194.640 217.421  c
194.536 216.026 194.296 215.078 193.921 214.578  c
193.661 214.255 193.250 214.093 192.687 214.093  c
192.250 214.093 191.906 214.213 191.656 214.453  c
191.281 214.807 191.028 215.432 190.898 216.328  c
190.768 217.224 190.703 220.338 190.703 225.671  c
190.703 228.578 190.807 230.526 191.015 231.515  c
191.161 232.234 191.375 232.713 191.656 232.953  c
191.937 233.192 192.312 233.312 192.781 233.312  c
193.281 233.312 193.661 233.151 193.921 232.828  c
194.338 232.265 194.578 231.395 194.640 230.218  c
194.703 223.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
369.062 194.870 m
369.062 200.070 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
368.093 215.046 m
368.093 231.843 l
368.093 233.104 368.148 233.908 368.257 234.257  c
368.367 234.606 368.599 234.890 368.953 235.109  c
369.307 235.328 369.875 235.437 370.656 235.437  c
371.125 235.437 l
371.125 236.000 l
360.312 236.000 l
360.312 235.437 l
360.859 235.437 l
361.734 235.437 362.359 235.335 362.734 235.132  c
363.109 234.929 363.362 234.653 363.492 234.304  c
363.622 233.955 363.687 233.135 363.687 231.843  c
363.687 221.203 l
363.687 220.244 363.643 219.648 363.554 219.414  c
363.466 219.179 363.296 218.979 363.046 218.812  c
362.796 218.645 362.510 218.562 362.187 218.562  c
361.677 218.562 361.052 218.724 360.312 219.046  c
360.046 218.500 l
367.593 215.046 l
368.093 215.046 l
h
387.859 225.734 m
387.859 227.786 387.572 229.697 387.000 231.468  c
386.656 232.562 386.195 233.458 385.617 234.156  c
385.039 234.854 384.380 235.406 383.640 235.812  c
382.901 236.218 382.099 236.421 381.234 236.421  c
380.244 236.421 379.351 236.169 378.554 235.664  c
377.757 235.158 377.052 234.437 376.437 233.500  c
375.989 232.812 375.599 231.901 375.265 230.765  c
374.838 229.224 374.625 227.630 374.625 225.984  c
374.625 223.755 374.937 221.703 375.562 219.828  c
376.072 218.286 376.854 217.104 377.906 216.281  c
378.958 215.458 380.067 215.046 381.234 215.046  c
382.421 215.046 383.533 215.453 384.570 216.265  c
385.606 217.078 386.364 218.171 386.843 219.546  c
387.520 221.432 387.859 223.494 387.859 225.734  c
h
383.203 225.703 m
383.203 222.109 383.182 220.015 383.140 219.421  c
383.036 218.026 382.796 217.078 382.421 216.578  c
382.161 216.255 381.750 216.093 381.187 216.093  c
380.750 216.093 380.406 216.213 380.156 216.453  c
379.781 216.807 379.528 217.432 379.398 218.328  c
379.268 219.224 379.203 222.338 379.203 227.671  c
379.203 230.578 379.307 232.526 379.515 233.515  c
379.661 234.234 379.875 234.713 380.156 234.953  c
380.437 235.192 380.812 235.312 381.281 235.312  c
381.781 235.312 382.161 235.151 382.421 234.828  c
382.838 234.265 383.078 233.395 383.140 232.218  c
383.203 225.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
198.690 379.482 m
198.690 10.2583 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
116 84 13 37 rc
q
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
198.690 370.743 m
193.490 370.743 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
139 361 18 32 rc
q
newpath
166.734 378.500 m
145.265 378.500 l
145.265 376.890 l
166.734 376.890 l
166.734 378.500 l
h
f
Q
Q
q
newpath
172.093 366.046 m
172.093 382.843 l
172.093 384.104 172.148 384.908 172.257 385.257  c
172.367 385.606 172.599 385.890 172.953 386.109  c
173.307 386.328 173.875 386.437 174.656 386.437  c
175.125 386.437 l
175.125 387.000 l
164.312 387.000 l
164.312 386.437 l
164.859 386.437 l
165.734 386.437 166.359 386.335 166.734 386.132  c
167.109 385.929 167.362 385.653 167.492 385.304  c
167.622 384.955 167.687 384.135 167.687 382.843  c
167.687 372.203 l
167.687 371.244 167.643 370.648 167.554 370.414  c
167.466 370.179 167.296 369.979 167.046 369.812  c
166.796 369.645 166.510 369.562 166.187 369.562  c
165.677 369.562 165.052 369.724 164.312 370.046  c
164.046 369.500 l
171.593 366.046 l
172.093 366.046 l
h
191.859 376.734 m
191.859 378.786 191.572 380.697 191.000 382.468  c
190.656 383.562 190.195 384.458 189.617 385.156  c
189.039 385.854 188.380 386.406 187.640 386.812  c
186.901 387.218 186.099 387.421 185.234 387.421  c
184.244 387.421 183.351 387.169 182.554 386.664  c
181.757 386.158 181.052 385.437 180.437 384.500  c
179.989 383.812 179.599 382.901 179.265 381.765  c
178.838 380.224 178.625 378.630 178.625 376.984  c
178.625 374.755 178.937 372.703 179.562 370.828  c
180.072 369.286 180.854 368.104 181.906 367.281  c
182.958 366.458 184.067 366.046 185.234 366.046  c
186.421 366.046 187.533 366.453 188.570 367.265  c
189.606 368.078 190.364 369.171 190.843 370.546  c
191.520 372.432 191.859 374.494 191.859 376.734  c
h
187.203 376.703 m
187.203 373.109 187.182 371.015 187.140 370.421  c
187.036 369.026 186.796 368.078 186.421 367.578  c
186.161 367.255 185.750 367.093 185.187 367.093  c
184.750 367.093 184.406 367.213 184.156 367.453  c
183.781 367.807 183.528 368.432 183.398 369.328  c
183.268 370.224 183.203 373.338 183.203 378.671  c
183.203 381.578 183.307 383.526 183.515 384.515  c
183.661 385.234 183.875 385.713 184.156 385.953  c
184.437 386.192 184.812 386.312 185.281 386.312  c
185.781 386.312 186.161 386.151 186.421 385.828  c
186.838 385.265 187.078 384.395 187.140 383.218  c
187.203 376.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
198.690 194.870 m
193.490 194.870 l
S
Q
q
newpath
198.690 18.9975 m
193.490 18.9975 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
172.093 14.0468 m
172.093 30.8437 l
172.093 32.1041 172.148 32.9088 172.257 33.2578  c
172.367 33.6067 172.599 33.8906 172.953 34.1093  c
173.307 34.3281 173.875 34.4375 174.656 34.4375  c
175.125 34.4375 l
175.125 35.0000 l
164.312 35.0000 l
164.312 34.4375 l
164.859 34.4375 l
165.734 34.4375 166.359 34.3359 166.734 34.1328  c
167.109 33.9296 167.362 33.6536 167.492 33.3046  c
167.622 32.9557 167.687 32.1354 167.687 30.8437  c
167.687 20.2031 l
167.687 19.2447 167.643 18.6484 167.554 18.4140  c
167.466 18.1796 167.296 17.9791 167.046 17.8125  c
166.796 17.6458 166.510 17.5625 166.187 17.5625  c
165.677 17.5625 165.052 17.7239 164.312 18.0468  c
164.046 17.5000 l
171.593 14.0468 l
172.093 14.0468 l
h
191.859 24.7343 m
191.859 26.7864 191.572 28.6979 191.000 30.4687  c
190.656 31.5625 190.195 32.4583 189.617 33.1562  c
189.039 33.8541 188.380 34.4062 187.640 34.8125  c
186.901 35.2187 186.099 35.4218 185.234 35.4218  c
184.244 35.4218 183.351 35.1692 182.554 34.6640  c
181.757 34.1588 181.052 33.4375 180.437 32.5000  c
179.989 31.8125 179.599 30.9010 179.265 29.7656  c
178.838 28.2239 178.625 26.6302 178.625 24.9843  c
178.625 22.7552 178.937 20.7031 179.562 18.8281  c
180.072 17.2864 180.854 16.1041 181.906 15.2812  c
182.958 14.4583 184.067 14.0468 185.234 14.0468  c
186.421 14.0468 187.533 14.4531 188.570 15.2656  c
189.606 16.0781 190.364 17.1718 190.843 18.5468  c
191.520 20.4322 191.859 22.4947 191.859 24.7343  c
h
187.203 24.7031 m
187.203 21.1093 187.182 19.0156 187.140 18.4218  c
187.036 17.0260 186.796 16.0781 186.421 15.5781  c
186.161 15.2552 185.750 15.0937 185.187 15.0937  c
184.750 15.0937 184.406 15.2135 184.156 15.4531  c
183.781 15.8072 183.528 16.4322 183.398 17.3281  c
183.268 18.2239 183.203 21.3385 183.203 26.6718  c
183.203 29.5781 183.307 31.5260 183.515 32.5156  c
183.661 33.2343 183.875 33.7135 184.156 33.9531  c
184.437 34.1927 184.812 34.3125 185.281 34.3125  c
185.781 34.3125 186.161 34.1510 186.421 33.8281  c
186.838 33.2656 187.078 32.3958 187.140 31.2187  c
187.203 24.7031 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
