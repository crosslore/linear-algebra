%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, November 24, 2012 4:23:42 PM MST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
2 J
0 j
[ 1.00000 0 0 1.00000 381.000 192.000 ] concat
newpath
8.00000 4.00000 m
8.00000 6.20913 6.20913 8.00000 4.00000 8.00000  c
1.79086 8.00000 0 6.20913 0 4.00000  c
0 1.79086 1.79086 0 4.00000 0  c
6.20913 0 8.00000 1.79086 8.00000 4.00000  c
h
f
[ 1.00000 0 0 1.00000 -381.000 -192.000 ] concat
[ 1.00000 0 0 1.00000 323.000 327.000 ] concat
newpath
8.00000 4.00000 m
8.00000 6.20913 6.20913 8.00000 4.00000 8.00000  c
1.79086 8.00000 0 6.20913 0 4.00000  c
0 1.79086 1.79086 0 4.00000 0  c
6.20913 0 8.00000 1.79086 8.00000 4.00000  c
h
f
[ 1.00000 0 0 1.00000 -323.000 -327.000 ] concat
[ 1.00000 0 0 1.00000 189.000 381.000 ] concat
newpath
8.00000 4.00000 m
8.00000 6.20913 6.20913 8.00000 4.00000 8.00000  c
1.79086 8.00000 0 6.20913 0 4.00000  c
0 1.79086 1.79086 0 4.00000 0  c
6.20913 0 8.00000 1.79086 8.00000 4.00000  c
h
f
[ 1.00000 0 0 1.00000 -189.000 -381.000 ] concat
[ 1.00000 0 0 1.00000 57.0000 324.000 ] concat
newpath
8.00000 4.00000 m
8.00000 6.20913 6.20913 8.00000 4.00000 8.00000  c
1.79086 8.00000 0 6.20913 0 4.00000  c
0 1.79086 1.79086 0 4.00000 0  c
6.20913 0 8.00000 1.79086 8.00000 4.00000  c
h
f
[ 1.00000 0 0 1.00000 -57.0000 -324.000 ] concat
[ 1.00000 0 0 1.00000 5.00000 192.000 ] concat
newpath
8.00000 4.00000 m
8.00000 6.20913 6.20913 8.00000 4.00000 8.00000  c
1.79086 8.00000 0 6.20913 0 4.00000  c
0 1.79086 1.79086 0 4.00000 0  c
6.20913 0 8.00000 1.79086 8.00000 4.00000  c
h
f
[ 1.00000 0 0 1.00000 -5.00000 -192.000 ] concat
[ 1.00000 0 0 1.00000 60.0000 62.0000 ] concat
newpath
8.00000 4.00000 m
8.00000 6.20913 6.20913 8.00000 4.00000 8.00000  c
1.79086 8.00000 0 6.20913 0 4.00000  c
0 1.79086 1.79086 0 4.00000 0  c
6.20913 0 8.00000 1.79086 8.00000 4.00000  c
h
f
[ 1.00000 0 0 1.00000 -60.0000 -62.0000 ] concat
[ 1.00000 0 0 1.00000 189.000 9.00000 ] concat
newpath
8.00000 4.00000 m
8.00000 6.20913 6.20913 8.00000 4.00000 8.00000  c
1.79086 8.00000 0 6.20913 0 4.00000  c
0 1.79086 1.79086 0 4.00000 0  c
6.20913 0 8.00000 1.79086 8.00000 4.00000  c
h
f
[ 1.00000 0 0 1.00000 -189.000 -9.00000 ] concat
[ 1.00000 0 0 1.00000 315.000 64.0000 ] concat
newpath
8.00000 4.00000 m
8.00000 6.20913 6.20913 8.00000 4.00000 8.00000  c
1.79086 8.00000 0 6.20913 0 4.00000  c
0 1.79086 1.79086 0 4.00000 0  c
6.20913 0 8.00000 1.79086 8.00000 4.00000  c
h
f
[ 1.00000 0 0 1.00000 -315.000 -64.0000 ] concat
[ 1.00000 0 0 1.00000 366.000 192.000 ] concat
newpath
8.00000 4.00000 m
8.00000 6.20913 6.20913 8.00000 4.00000 8.00000  c
1.79086 8.00000 0 6.20913 0 4.00000  c
0 1.79086 1.79086 0 4.00000 0  c
6.20913 0 8.00000 1.79086 8.00000 4.00000  c
h
f
[ 1.00000 0 0 1.00000 -366.000 -192.000 ] concat
Q
Q
q
2 J
0 j
q
newpath
0 194.579 m
383.989 194.579 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
283 239 8 37 rc
q
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
54.8556 194.579 m
54.8556 199.779 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
32 210 18 32 rc
q
newpath
59.7343 227.500 m
38.2656 227.500 l
38.2656 225.890 l
59.7343 225.890 l
59.7343 227.500 l
h
f
Q
Q
q
newpath
65.0937 215.046 m
65.0937 231.843 l
65.0937 233.104 65.1484 233.908 65.2578 234.257  c
65.3671 234.606 65.5989 234.890 65.9531 235.109  c
66.3072 235.328 66.8750 235.437 67.6562 235.437  c
68.1250 235.437 l
68.1250 236.000 l
57.3125 236.000 l
57.3125 235.437 l
57.8593 235.437 l
58.7343 235.437 59.3593 235.335 59.7343 235.132  c
60.1093 234.929 60.3619 234.653 60.4921 234.304  c
60.6224 233.955 60.6875 233.135 60.6875 231.843  c
60.6875 221.203 l
60.6875 220.244 60.6432 219.648 60.5546 219.414  c
60.4661 219.179 60.2968 218.979 60.0468 218.812  c
59.7968 218.645 59.5104 218.562 59.1875 218.562  c
58.6770 218.562 58.0520 218.724 57.3125 219.046  c
57.0468 218.500 l
64.5937 215.046 l
65.0937 215.046 l
h
84.8593 225.734 m
84.8593 227.786 84.5729 229.697 84.0000 231.468  c
83.6562 232.562 83.1953 233.458 82.6171 234.156  c
82.0390 234.854 81.3802 235.406 80.6406 235.812  c
79.9010 236.218 79.0989 236.421 78.2343 236.421  c
77.2447 236.421 76.3515 236.169 75.5546 235.664  c
74.7578 235.158 74.0520 234.437 73.4375 233.500  c
72.9895 232.812 72.5989 231.901 72.2656 230.765  c
71.8385 229.224 71.6250 227.630 71.6250 225.984  c
71.6250 223.755 71.9375 221.703 72.5625 219.828  c
73.0729 218.286 73.8541 217.104 74.9062 216.281  c
75.9583 215.458 77.0677 215.046 78.2343 215.046  c
79.4218 215.046 80.5338 215.453 81.5703 216.265  c
82.6067 217.078 83.3645 218.171 83.8437 219.546  c
84.5208 221.432 84.8593 223.494 84.8593 225.734  c
h
80.2031 225.703 m
80.2031 222.109 80.1822 220.015 80.1406 219.421  c
80.0364 218.026 79.7968 217.078 79.4218 216.578  c
79.1614 216.255 78.7500 216.093 78.1875 216.093  c
77.7500 216.093 77.4062 216.213 77.1562 216.453  c
76.7812 216.807 76.5286 217.432 76.3984 218.328  c
76.2682 219.224 76.2031 222.338 76.2031 227.671  c
76.2031 230.578 76.3072 232.526 76.5156 233.515  c
76.6614 234.234 76.8750 234.713 77.1562 234.953  c
77.4375 235.192 77.8125 235.312 78.2812 235.312  c
78.7812 235.312 79.1614 235.151 79.4218 234.828  c
79.8385 234.265 80.0781 233.395 80.1406 232.218  c
80.2031 225.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
123.425 194.579 m
123.425 199.779 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
109 210 18 32 rc
q
newpath
136.734 227.500 m
115.265 227.500 l
115.265 225.890 l
136.734 225.890 l
136.734 227.500 l
h
f
Q
Q
q
newpath
136.718 215.468 m
146.328 215.468 l
144.812 219.375 l
136.718 219.375 l
135.953 221.421 l
139.432 221.557 142.109 222.427 143.984 224.031  c
145.526 225.354 146.296 227.000 146.296 228.968  c
146.296 230.229 145.940 231.460 145.226 232.664  c
144.513 233.867 143.505 234.794 142.203 235.445  c
140.901 236.096 139.474 236.421 137.921 236.421  c
136.244 236.421 134.958 236.109 134.062 235.484  c
133.437 235.036 133.125 234.531 133.125 233.968  c
133.125 233.541 133.289 233.161 133.617 232.828  c
133.945 232.494 134.322 232.328 134.750 232.328  c
135.145 232.328 135.546 232.408 135.953 232.570  c
136.359 232.731 137.052 233.151 138.031 233.828  c
138.645 234.255 139.171 234.552 139.609 234.718  c
139.921 234.833 140.276 234.890 140.671 234.890  c
141.505 234.890 142.210 234.588 142.789 233.984  c
143.367 233.380 143.656 232.656 143.656 231.812  c
143.656 230.031 142.768 228.585 140.992 227.476  c
139.216 226.367 136.974 225.812 134.265 225.812  c
133.994 225.812 133.588 225.817 133.046 225.828  c
136.718 215.468 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
191.994 194.579 m
191.994 199.779 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
192.359 223.734 m
192.359 225.786 192.072 227.697 191.500 229.468  c
191.156 230.562 190.695 231.458 190.117 232.156  c
189.539 232.854 188.880 233.406 188.140 233.812  c
187.401 234.218 186.599 234.421 185.734 234.421  c
184.744 234.421 183.851 234.169 183.054 233.664  c
182.257 233.158 181.552 232.437 180.937 231.500  c
180.489 230.812 180.099 229.901 179.765 228.765  c
179.338 227.224 179.125 225.630 179.125 223.984  c
179.125 221.755 179.437 219.703 180.062 217.828  c
180.572 216.286 181.354 215.104 182.406 214.281  c
183.458 213.458 184.567 213.046 185.734 213.046  c
186.921 213.046 188.033 213.453 189.070 214.265  c
190.106 215.078 190.864 216.171 191.343 217.546  c
192.020 219.432 192.359 221.494 192.359 223.734  c
h
187.703 223.703 m
187.703 220.109 187.682 218.015 187.640 217.421  c
187.536 216.026 187.296 215.078 186.921 214.578  c
186.661 214.255 186.250 214.093 185.687 214.093  c
185.250 214.093 184.906 214.213 184.656 214.453  c
184.281 214.807 184.028 215.432 183.898 216.328  c
183.768 217.224 183.703 220.338 183.703 225.671  c
183.703 228.578 183.807 230.526 184.015 231.515  c
184.161 232.234 184.375 232.713 184.656 232.953  c
184.937 233.192 185.312 233.312 185.781 233.312  c
186.281 233.312 186.661 233.151 186.921 232.828  c
187.338 232.265 187.578 231.395 187.640 230.218  c
187.703 223.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
260.564 194.579 m
260.564 199.779 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
261.718 215.468 m
271.328 215.468 l
269.812 219.375 l
261.718 219.375 l
260.953 221.421 l
264.432 221.557 267.109 222.427 268.984 224.031  c
270.526 225.354 271.296 227.000 271.296 228.968  c
271.296 230.229 270.940 231.460 270.226 232.664  c
269.513 233.867 268.505 234.794 267.203 235.445  c
265.901 236.096 264.474 236.421 262.921 236.421  c
261.244 236.421 259.958 236.109 259.062 235.484  c
258.437 235.036 258.125 234.531 258.125 233.968  c
258.125 233.541 258.289 233.161 258.617 232.828  c
258.945 232.494 259.322 232.328 259.750 232.328  c
260.145 232.328 260.546 232.408 260.953 232.570  c
261.359 232.731 262.052 233.151 263.031 233.828  c
263.645 234.255 264.171 234.552 264.609 234.718  c
264.921 234.833 265.276 234.890 265.671 234.890  c
266.505 234.890 267.210 234.588 267.789 233.984  c
268.367 233.380 268.656 232.656 268.656 231.812  c
268.656 230.031 267.768 228.585 265.992 227.476  c
264.216 226.367 261.974 225.812 259.265 225.812  c
258.994 225.812 258.588 225.817 258.046 225.828  c
261.718 215.468 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
329.134 194.579 m
329.134 199.779 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
328.093 215.046 m
328.093 231.843 l
328.093 233.104 328.148 233.908 328.257 234.257  c
328.367 234.606 328.599 234.890 328.953 235.109  c
329.307 235.328 329.875 235.437 330.656 235.437  c
331.125 235.437 l
331.125 236.000 l
320.312 236.000 l
320.312 235.437 l
320.859 235.437 l
321.734 235.437 322.359 235.335 322.734 235.132  c
323.109 234.929 323.362 234.653 323.492 234.304  c
323.622 233.955 323.687 233.135 323.687 231.843  c
323.687 221.203 l
323.687 220.244 323.643 219.648 323.554 219.414  c
323.466 219.179 323.296 218.979 323.046 218.812  c
322.796 218.645 322.510 218.562 322.187 218.562  c
321.677 218.562 321.052 218.724 320.312 219.046  c
320.046 218.500 l
327.593 215.046 l
328.093 215.046 l
h
347.859 225.734 m
347.859 227.786 347.572 229.697 347.000 231.468  c
346.656 232.562 346.195 233.458 345.617 234.156  c
345.039 234.854 344.380 235.406 343.640 235.812  c
342.901 236.218 342.099 236.421 341.234 236.421  c
340.244 236.421 339.351 236.169 338.554 235.664  c
337.757 235.158 337.052 234.437 336.437 233.500  c
335.989 232.812 335.599 231.901 335.265 230.765  c
334.838 229.224 334.625 227.630 334.625 225.984  c
334.625 223.755 334.937 221.703 335.562 219.828  c
336.072 218.286 336.854 217.104 337.906 216.281  c
338.958 215.458 340.067 215.046 341.234 215.046  c
342.421 215.046 343.533 215.453 344.570 216.265  c
345.606 217.078 346.364 218.171 346.843 219.546  c
347.520 221.432 347.859 223.494 347.859 225.734  c
h
343.203 225.703 m
343.203 222.109 343.182 220.015 343.140 219.421  c
343.036 218.026 342.796 217.078 342.421 216.578  c
342.161 216.255 341.750 216.093 341.187 216.093  c
340.750 216.093 340.406 216.213 340.156 216.453  c
339.781 216.807 339.528 217.432 339.398 218.328  c
339.268 219.224 339.203 222.338 339.203 227.671  c
339.203 230.578 339.307 232.526 339.515 233.515  c
339.661 234.234 339.875 234.713 340.156 234.953  c
340.437 235.192 340.812 235.312 341.281 235.312  c
341.781 235.312 342.161 235.151 342.421 234.828  c
342.838 234.265 343.078 233.395 343.140 232.218  c
343.203 225.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
191.994 388.158 m
191.994 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
114 79 8 37 rc
q
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
191.994 332.850 m
186.794 332.850 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
132 323 18 32 rc
q
newpath
159.734 340.500 m
138.265 340.500 l
138.265 338.890 l
159.734 338.890 l
159.734 340.500 l
h
f
Q
Q
q
newpath
165.093 328.046 m
165.093 344.843 l
165.093 346.104 165.148 346.908 165.257 347.257  c
165.367 347.606 165.599 347.890 165.953 348.109  c
166.307 348.328 166.875 348.437 167.656 348.437  c
168.125 348.437 l
168.125 349.000 l
157.312 349.000 l
157.312 348.437 l
157.859 348.437 l
158.734 348.437 159.359 348.335 159.734 348.132  c
160.109 347.929 160.362 347.653 160.492 347.304  c
160.622 346.955 160.687 346.135 160.687 344.843  c
160.687 334.203 l
160.687 333.244 160.643 332.648 160.554 332.414  c
160.466 332.179 160.296 331.979 160.046 331.812  c
159.796 331.645 159.510 331.562 159.187 331.562  c
158.677 331.562 158.052 331.724 157.312 332.046  c
157.046 331.500 l
164.593 328.046 l
165.093 328.046 l
h
184.859 338.734 m
184.859 340.786 184.572 342.697 184.000 344.468  c
183.656 345.562 183.195 346.458 182.617 347.156  c
182.039 347.854 181.380 348.406 180.640 348.812  c
179.901 349.218 179.099 349.421 178.234 349.421  c
177.244 349.421 176.351 349.169 175.554 348.664  c
174.757 348.158 174.052 347.437 173.437 346.500  c
172.989 345.812 172.599 344.901 172.265 343.765  c
171.838 342.224 171.625 340.630 171.625 338.984  c
171.625 336.755 171.937 334.703 172.562 332.828  c
173.072 331.286 173.854 330.104 174.906 329.281  c
175.958 328.458 177.067 328.046 178.234 328.046  c
179.421 328.046 180.533 328.453 181.570 329.265  c
182.606 330.078 183.364 331.171 183.843 332.546  c
184.520 334.432 184.859 336.494 184.859 338.734  c
h
180.203 338.703 m
180.203 335.109 180.182 333.015 180.140 332.421  c
180.036 331.026 179.796 330.078 179.421 329.578  c
179.161 329.255 178.750 329.093 178.187 329.093  c
177.750 329.093 177.406 329.213 177.156 329.453  c
176.781 329.807 176.528 330.432 176.398 331.328  c
176.268 332.224 176.203 335.338 176.203 340.671  c
176.203 343.578 176.307 345.526 176.515 346.515  c
176.661 347.234 176.875 347.713 177.156 347.953  c
177.437 348.192 177.812 348.312 178.281 348.312  c
178.781 348.312 179.161 348.151 179.421 347.828  c
179.838 347.265 180.078 346.395 180.140 345.218  c
180.203 338.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
191.994 263.714 m
186.794 263.714 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
148 254 18 32 rc
q
newpath
175.734 271.500 m
154.265 271.500 l
154.265 269.890 l
175.734 269.890 l
175.734 271.500 l
h
f
Q
Q
q
newpath
175.718 259.468 m
185.328 259.468 l
183.812 263.375 l
175.718 263.375 l
174.953 265.421 l
178.432 265.557 181.109 266.427 182.984 268.031  c
184.526 269.354 185.296 271.000 185.296 272.968  c
185.296 274.229 184.940 275.460 184.226 276.664  c
183.513 277.867 182.505 278.794 181.203 279.445  c
179.901 280.096 178.474 280.421 176.921 280.421  c
175.244 280.421 173.958 280.109 173.062 279.484  c
172.437 279.036 172.125 278.531 172.125 277.968  c
172.125 277.541 172.289 277.161 172.617 276.828  c
172.945 276.494 173.322 276.328 173.750 276.328  c
174.145 276.328 174.546 276.408 174.953 276.570  c
175.359 276.731 176.052 277.151 177.031 277.828  c
177.645 278.255 178.171 278.552 178.609 278.718  c
178.921 278.833 179.276 278.890 179.671 278.890  c
180.505 278.890 181.210 278.588 181.789 277.984  c
182.367 277.380 182.656 276.656 182.656 275.812  c
182.656 274.031 181.768 272.585 179.992 271.476  c
178.216 270.367 175.974 269.812 173.265 269.812  c
172.994 269.812 172.588 269.817 172.046 269.828  c
175.718 259.468 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
191.994 194.579 m
186.794 194.579 l
S
Q
q
newpath
191.994 125.443 m
186.794 125.443 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
175.718 121.468 m
185.328 121.468 l
183.812 125.375 l
175.718 125.375 l
174.953 127.421 l
178.432 127.557 181.109 128.427 182.984 130.031  c
184.526 131.354 185.296 133.000 185.296 134.968  c
185.296 136.229 184.940 137.460 184.226 138.664  c
183.513 139.867 182.505 140.794 181.203 141.445  c
179.901 142.096 178.474 142.421 176.921 142.421  c
175.244 142.421 173.958 142.109 173.062 141.484  c
172.437 141.036 172.125 140.531 172.125 139.968  c
172.125 139.541 172.289 139.161 172.617 138.828  c
172.945 138.494 173.322 138.328 173.750 138.328  c
174.145 138.328 174.546 138.408 174.953 138.570  c
175.359 138.731 176.052 139.151 177.031 139.828  c
177.645 140.255 178.171 140.552 178.609 140.718  c
178.921 140.833 179.276 140.890 179.671 140.890  c
180.505 140.890 181.210 140.588 181.789 139.984  c
182.367 139.380 182.656 138.656 182.656 137.812  c
182.656 136.031 181.768 134.585 179.992 133.476  c
178.216 132.367 175.974 131.812 173.265 131.812  c
172.994 131.812 172.588 131.817 172.046 131.828  c
175.718 121.468 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
191.994 56.3084 m
186.794 56.3084 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
165.093 52.0468 m
165.093 68.8437 l
165.093 70.1041 165.148 70.9088 165.257 71.2578  c
165.367 71.6067 165.599 71.8906 165.953 72.1093  c
166.307 72.3281 166.875 72.4375 167.656 72.4375  c
168.125 72.4375 l
168.125 73.0000 l
157.312 73.0000 l
157.312 72.4375 l
157.859 72.4375 l
158.734 72.4375 159.359 72.3359 159.734 72.1328  c
160.109 71.9296 160.362 71.6536 160.492 71.3046  c
160.622 70.9557 160.687 70.1354 160.687 68.8437  c
160.687 58.2031 l
160.687 57.2447 160.643 56.6484 160.554 56.4140  c
160.466 56.1796 160.296 55.9791 160.046 55.8125  c
159.796 55.6458 159.510 55.5625 159.187 55.5625  c
158.677 55.5625 158.052 55.7239 157.312 56.0468  c
157.046 55.5000 l
164.593 52.0468 l
165.093 52.0468 l
h
184.859 62.7343 m
184.859 64.7864 184.572 66.6979 184.000 68.4687  c
183.656 69.5625 183.195 70.4583 182.617 71.1562  c
182.039 71.8541 181.380 72.4062 180.640 72.8125  c
179.901 73.2187 179.099 73.4218 178.234 73.4218  c
177.244 73.4218 176.351 73.1692 175.554 72.6640  c
174.757 72.1588 174.052 71.4375 173.437 70.5000  c
172.989 69.8125 172.599 68.9010 172.265 67.7656  c
171.838 66.2239 171.625 64.6302 171.625 62.9843  c
171.625 60.7552 171.937 58.7031 172.562 56.8281  c
173.072 55.2864 173.854 54.1041 174.906 53.2812  c
175.958 52.4583 177.067 52.0468 178.234 52.0468  c
179.421 52.0468 180.533 52.4531 181.570 53.2656  c
182.606 54.0781 183.364 55.1718 183.843 56.5468  c
184.520 58.4322 184.859 60.4947 184.859 62.7343  c
h
180.203 62.7031 m
180.203 59.1093 180.182 57.0156 180.140 56.4218  c
180.036 55.0260 179.796 54.0781 179.421 53.5781  c
179.161 53.2552 178.750 53.0937 178.187 53.0937  c
177.750 53.0937 177.406 53.2135 177.156 53.4531  c
176.781 53.8072 176.528 54.4322 176.398 55.3281  c
176.268 56.2239 176.203 59.3385 176.203 64.6718  c
176.203 67.5781 176.307 69.5260 176.515 70.5156  c
176.661 71.2343 176.875 71.7135 177.156 71.9531  c
177.437 72.1927 177.812 72.3125 178.281 72.3125  c
178.781 72.3125 179.161 72.1510 179.421 71.8281  c
179.838 71.2656 180.078 70.3958 180.140 69.2187  c
180.203 62.7031 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
